<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="/css/profile.css">
</head>
<body>
    <header class="header">
        <button class="icon-button" onclick="history.back()">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m15 18-6-6 6-6"/></svg>
        </button>
        <h1>My Profile</h1>
      
    </header>

    <div class="container">
        <div class="grid">
            <!-- Profile Card -->
            <div class="card">
                <img src="https://via.placeholder.com/150" alt="Profile Picture" class="profile-image" id="profilePic">
                <h2 class="profile-name" id="fullName"></h2>
                <p class="profile-id" id="userId"></p>
                <div class="profile-details">
                    <div>
                        <label for="gender">Gender</label>
                        <p id="gender"></p>
                    </div>
                    <div>
                        <label for="contact">Contact</label>
                        <p id="contact"></p>
                    </div>
                    <div>
                        <label for="email">Email</label>
                        <p id="email"></p>
                    </div>
                    <div>
                        <label for="address">Address</label>
                        <p id="address"></p>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div>
                <!-- Stats Card -->
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Total Case Upload</h3>
                    </div>
                    <div class="total-cases">
                        <div class="case-count" id="totalCaseCount">0</div>
                        <div>
                            <p>Total Cases</p>
                            <p class="profile-name" id="totalCaseText">0</p>
                        </div>
                    </div>
                </div>

                <!-- Cases List -->
                <div class="card" style="margin-top: 24px;">
                    <div class="card-header">
                        <h3 class="card-title">Recent Cases</h3>
                    </div>
                    <div id="casesList">
                        <!-- Case items will be dynamically added here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const profileFields = {
            fullName: document.getElementById('fullName'),
            gender: document.getElementById('gender'),
            contact: document.getElementById('contact'),
            email: document.getElementById('email'),
            address: document.getElementById('address')
        };
        const casesList = document.getElementById('casesList');
        const totalCaseCount = document.getElementById('totalCaseCount');
        const totalCaseText = document.getElementById('totalCaseText');

        let userData = null;

        async function fetchUserData() {
            try {
                const response = await axios.get('/api/user');
                userData = response.data;
                updateProfileUI(userData);
            } catch (error) {
                console.error('Error fetching user data:', error);
            }
        }

        async function fetchCases() {
            try {
                const response = await axios.get('/api/cases');
                const cases = response.data;
                updateCasesUI(cases);
            } catch (error) {
                console.error('Error fetching cases:', error);
            }
        }

        function updateProfileUI(user) {
            document.getElementById('profilePic').src = user.profile_pic || 'https://via.placeholder.com/150';
            profileFields.fullName.textContent = `${user.firstname} ${user.lastname}`;
            document.getElementById('userId').textContent = `User ID: ${user.user_id}`;
            profileFields.gender.textContent = user.gender;
            profileFields.contact.textContent = user.contact_num;
            profileFields.email.textContent = user.email;
            profileFields.address.textContent = `${user.sitio}, ${user.barangay}, ${user.province}`;
        }

        function updateCasesUI(cases) {
            totalCaseCount.textContent = cases.length;
            totalCaseText.textContent = cases.length;

            casesList.innerHTML = '';
            cases.forEach(caseItem => {
                const caseElement = createCaseItem(caseItem);
                casesList.appendChild(caseElement);
            });
        }

        function createCaseItem(caseData) {
            const caseItem = document.createElement('div');
            caseItem.className = 'case-item';
            caseItem.innerHTML = `
                <img src="https://via.placeholder.com/80" alt="${caseData.case_title}" class="case-image">
                <div class="case-info">
                    <h4>${caseData.case_title}</h4>
                    <p>${caseData.concern}</p>
                    <p>Date Sent: ${new Date(caseData.date_sent).toLocaleDateString()}</p>
                </div>
                <div class="case-actions">
                    <div class="dropdown">
                        <button onclick="toggleDropdown(${caseData.id})" class="icon-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="1"/><circle cx="12" cy="5" r="1"/><circle cx="12" cy="19" r="1"/></svg>
                        </button>
                        <div id="dropdown${caseData.id}" class="dropdown-content">
                            <a href="#" onclick="downloadCase('${caseData.file_path}', '${caseData.case_title}')">Download Case</a>
                            <a href="#" onclick="deleteCase(${caseData.id})">Delete Case</a>
                        </div>
                    </div>
                </div>
            `;
            return caseItem;
        }

        function toggleDropdown(id) {
            document.getElementById(`dropdown${id}`).classList.toggle("show");
        }

        window.onclick = function(event) {
            if (!event.target.matches('.icon-button')) {
                var dropdowns = document.getElementsByClassName("dropdown-content");
                for (var i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.classList.contains('show')) {
                        openDropdown.classList.remove('show');
                    }
                }
            }
        }

        function downloadCase(filePath, fileName) {
    if (!filePath) {
        alert('No file available for download');
        return;
    }
    
    const fileNameFromPath = filePath.split('/').pop();
    const downloadUrl = `/download/${encodeURIComponent(fileNameFromPath)}`;
    
    fetch(downloadUrl)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.blob();
        })
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = fileName || fileNameFromPath;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        })
        .catch(error => {
            console.error('Error downloading file:', error);
            alert(`Failed to download file: ${error.message}. Please try again later.`);
        });
}

        function deleteCase(id) {
    if (confirm(`Are you sure you want to delete case ${id}?`)) {
        axios.delete(`/api/cases/${id}`)
            .then(response => {
                if (response.data && response.data.message) {
                    alert(response.data.message);
                } else {
                    alert(`Case ${id} moved to trash successfully`);
                }
                fetchCases(); // Refresh the cases list
            })
            .catch(error => {
                console.error('Error deleting case:', error);
                let errorMessage = 'Failed to delete case. Please try again later.';
                if (error.response && error.response.data && error.response.data.error) {
                    errorMessage = error.response.data.error;
                }
                alert(errorMessage);
            });
    }
}

        // Initial data fetch
        fetchUserData();
        fetchCases();
    </script>
</body>
</html>

