<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NBI Administrative Dashboard</title>
  <link rel="stylesheet" href="/css/admin_dashboard.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Original styles remain unchanged -->
</head>
<body>
  
  <div class="sidebar">
    <div class="logo">
      <img src="/images/nbi_logo.png" alt="NBI Logo">
    </div>
    <nav>
      <ul>
        <li><a href="/admin-dashboard"><i class="nav-item nav-link"></i> Dashboard</a></li>
        <li><a href="/admin-users"><i class="nav-item nav-link"></i> Users</a></li>
        <li><a href="/admin-upload"><i class="nav-item nav-link"></i> Upload</a></li>
        <li><a href="/admin-addcase"><i class="nav-item nav-link"></i> Add Case</a></li>
        <li><a href="/admin-reports"><i class="nav-item nav-link"></i> Reports</a></li>
        <li><a href="/admin-notification"><i class="nav-item nav-link"></i> Notification</a></li>
        <li><a href="/admin-logs"><i class="nav-item nav-link"></i> Logs</a></li>
        <li><a href="/admin_profile"><i class="nav-item nav-link"></i> Profile</a></li>
        <li><a href="/admin-trash"><i class="nav-item nav-link"></i> Trash</a></li>
      </ul>
    </nav>
    <div class="logout">
      <a href="/logout">
        <button>Logout</button>
      </a>
    </div>
  </div>

  <div class="content">
    <div class="header">NBI Administrative Control Panel</div>

    <div class="card">
      <div class="card-title">System Overview</div>
      <div class="card-content">
        Welcome to the NBI Administrative Dashboard. This control panel provides comprehensive oversight of system operations, personnel management, and case tracking statistics.
      </div>
    </div>

    <div class="card" style="background-color: #bfe9ff;">
      <div class="card-title">Current System Statistics</div>
      <div class="card-content">
        <canvas id="statisticsChart" width="400" height="200"></canvas>
        <div id="lastUpdate" style="text-align: right; font-size: 12px; color: #666;"></div>
      </div>
    </div>
  </div>

  <script>
    // Function to format numbers with commas
    function formatNumber(num) {
      return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    // Function to update the last updated timestamp
    function updateTimestamp() {
      const now = new Date();
      document.getElementById('lastUpdate').textContent = 
        `Last Updated: ${now.toLocaleDateString()} ${now.toLocaleTimeString()}`;
    }

    // Function to fetch data from server (simulated here)
    async function fetchStatistics() {
      // In a real implementation, this would be an API call
      // For demonstration, generating random numbers
      return {
        activeCases: Math.floor(Math.random() * (500 - 300 + 1)) + 300,
        activeAgents: Math.floor(Math.random() * (200 - 150 + 1)) + 150,
        pendingReports: Math.floor(Math.random() * (100 - 50 + 1)) + 50,
        dailyClearance: Math.floor(Math.random() * (1000 - 500 + 1)) + 500
      };
    }

    // Function to update the chart
    async function updateChart() {
      const stats = await fetchStatistics();
      
      const ctx = document.getElementById('statisticsChart').getContext('2d');
      
      // Destroy existing chart if it exists
      if (window.mainChart) {
        window.mainChart.destroy();
      }

      // Create new chart
      window.mainChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: [
            'Active Cases',
            'Active Field Agents',
            'Pending Reports',
            'Daily Clearance Applications'
          ],
          datasets: [{
            label: 'Current Statistics',
            data: [
              stats.activeCases,
              stats.activeAgents,
              stats.pendingReports,
              stats.dailyClearance
            ],
            backgroundColor: [
              'rgba(54, 162, 235, 0.2)',
              'rgba(255, 99, 132, 0.2)',
              'rgba(255, 206, 86, 0.2)',
              'rgba(75, 192, 192, 0.2)'
            ],
            borderColor: [
              'rgba(54, 162, 235, 1)',
              'rgba(255, 99, 132, 1)',
              'rgba(255, 206, 86, 1)',
              'rgba(75, 192, 192, 1)'
            ],
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return formatNumber(value);
                }
              }
            }
          },
          plugins: {
            tooltip: {
              callbacks: {
                label: function(context) {
                  return ` ${formatNumber(context.raw)}`;
                }
              }
            }
          }
        }
      });

      updateTimestamp();
    }

    // Initial update
    updateChart();

    // Update every 5 minutes
    setInterval(updateChart, 300000);

    // Add click handler to manually refresh
    document.querySelector('.card-title').addEventListener('click', function() {
      updateChart();
    });
  </script>
</body>
</html>