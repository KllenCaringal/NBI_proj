<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NBI Case Management System - Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/user-home.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism-tomorrow.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-javascript.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .file-menu {
            position: relative;
            cursor: pointer;
        }
        .file-menu-dropdown {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 1000;
        }
        .file-menu-dropdown.show {
            display: block;
        }
        .file-menu-dropdown button {
            display: block;
            width: 100%;
            padding: 8px 16px;
            text-align: left;
            border: none;
            background: none;
            cursor: pointer;
        }
        .file-menu-dropdown button:hover {
            background-color: #f0f0f0;
        }
        .notification-count {
            background-color: red;
            color: white;
            border-radius: 50%;
            padding: 2px 6px;
            font-size: 12px;
            position: absolute;
            top: -5px;
            right: -5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="navbar">
        <div class="navbar-left">
            <div class="hamburger" onclick="toggleSidebar()">‚ò∞</div>
            <img src="/images/nbi_logo.png" alt="NBI Logo" class="navbar-logo">
            <div class="title">NBI SKGV </div>
        </div>
        <div class="search-container">
            <input type="text" placeholder="Search case number..." aria-label="Search">
        </div>
        <div class="navbar-right profile-settings">
            <div class="icon" id="notificationIcon" title="Notifications">
                üîî<span id="notificationCount" class="notification-count"></span>
            </div>
            <div class="icon" id="profileIcon" title="View Profile">üë§</div>
            <div class="icon" id="settingsIcon" title="Account Settings">‚öôÔ∏è</div>
        </div>
    </div>

    <div id="sidebar" class="sidebar">
        <ul>
            <li><a href="/user_home"><span class="sidebar-icon">üè†</span>Home</a></li>
            <li><a href="/user_upload"><span class="sidebar-icon">üì§</span>Upload</a></li>
            <li><a href="/user_notifications"><span class="sidebar-icon">üîî</span>Notifications</a></li>
            <li><a href="/user-trash"><span class="sidebar-icon">üóëÔ∏è</span>Trash</a></li>
        </ul>
        <div class="logout" onclick="handleLogout()">
            <span class="sidebar-icon">üö™</span>Logout
        </div>
    </div>

    <div id="content" class="content">
        <div class="file-grid">
            <% if (cases && cases.length > 0) { %>
                <% cases.forEach(function(caseItem) { %>
                    <div class="file-card" data-case-id="<%= caseItem.id %>">
                        <div class="file-header">
                            <div class="file-title-section">
                                <% 
                                    let fileIcon = 'üìÑ';
                                    const ext = caseItem.file_name ? caseItem.file_name.split('.').pop().toLowerCase() : '';
                                    if (['js', 'jsx', 'ts', 'tsx'].includes(ext)) fileIcon = 'üìù';
                                %>
                                <span class="file-icon"><%= fileIcon %></span>
                                <span class="file-name"><%= caseItem.file_name || caseItem.title %></span>
                            </div>
                            <div class="file-menu" data-case-id="<%= caseItem.id %>">‚ãÆ
                                <div class="file-menu-dropdown" id="menu-<%= caseItem.id %>">
                                    <button class="delete-button" data-case-id="<%= caseItem.id %>">Delete</button>
                                </div>
                            </div>
                        </div>
                        <div class="file-preview">
                            <% if (caseItem.fileContent) { %>
                                <pre class="code-preview"><code class="language-javascript"><%= caseItem.fileContent.substring(0, 200) %>...</code></pre>
                            <% } else { %>
                                <div class="no-preview">No preview available</div>
                            <% } %>
                        </div>
                        <div class="file-info">
                            <div class="file-meta">
                                <span class="file-date">
                                    <%= new Date(caseItem.created_at).toLocaleDateString('en-US', { 
                                        month: 'short', 
                                        day: 'numeric', 
                                        year: 'numeric' 
                                    }) %>
                                </span>
                                <% if (caseItem.file_name) { %>
                                    <a href="/download/<%= caseItem.file_name %>" class="download-link">Download</a>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-files">
                    <p>No active cases found.</p>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        let sidebarOpen = false;

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const content = document.getElementById('content');
            sidebarOpen = !sidebarOpen;
            sidebar.classList.toggle('open');
            content.classList.toggle('shifted');
            
            if (window.innerWidth <= 768) {
                document.body.style.marginLeft = sidebarOpen ? '100%' : '0';
            }
        }

        function redirectToPage(url) {
            window.location.href = url;
        }

        function handleLogout() {
            fetch('/logout', { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = '/login'; 
                    }
                })
                .catch(error => {
                    console.error('Logout error:', error);
                });
        }

        function updateNotificationCount() {
            axios.get('/api/notifications')
                .then(response => {
                    const unreadCount = response.data.filter(n => !n.is_read).length;
                    const countElement = document.getElementById('notificationCount');
                    if (unreadCount > 0) {
                        countElement.textContent = unreadCount;
                        countElement.style.display = 'inline-block';
                    } else {
                        countElement.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error fetching notification count:', error);
                });
        }

        document.addEventListener('DOMContentLoaded', function() {
            const profileIcon = document.getElementById('profileIcon');
            const settingsIcon = document.getElementById('settingsIcon');

            profileIcon.addEventListener('click', function() {
                redirectToPage('/profile');
            });

            settingsIcon.addEventListener('click', function() {
                redirectToPage('/settings');
            });

            document.querySelector('.file-grid').addEventListener('click', function(event) {
                const fileMenu = event.target.closest('.file-menu');
                if (fileMenu) {
                    const caseId = fileMenu.dataset.caseId;
                    const dropdown = document.getElementById(`menu-${caseId}`);
                    dropdown.classList.toggle('show');
                    event.stopPropagation();
                }

                if (event.target.classList.contains('delete-button')) {
                    const caseId = event.target.dataset.caseId;
                    if (confirm('Are you sure you want to delete this case?')) {
                        fetch(`/api/cases/${caseId}`, { method: 'DELETE' })
                            .then(response => response.json())
                            .then(data => {
                                if (data.message === 'Case deleted successfully') {
                                    const caseElement = document.querySelector(`.file-card[data-case-id="${caseId}"]`);
                                    if (caseElement) {
                                        caseElement.remove();
                                    }
                                } else {
                                    alert('Error deleting case');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error deleting case');
                            });
                    }
                }
            });

            document.addEventListener('click', function(event) {
                const dropdowns = document.querySelectorAll('.file-menu-dropdown');
                dropdowns.forEach(dropdown => {
                    if (!dropdown.contains(event.target)) {
                        dropdown.classList.remove('show');
                    }
                });
            });

            updateNotificationCount();
            setInterval(updateNotificationCount, 60000);
        });

        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                document.body.style.marginLeft = '0';
            }
        });

        document.addEventListener('DOMContentLoaded', (event) => {
            Prism.highlightAll();
        });
    </script>
</body>
</html>